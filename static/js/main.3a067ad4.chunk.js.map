{"version":3,"sources":["components/Expresso-feedback/Feedback.module.css","components/Expresso-feedback/Section.js","components/Expresso-feedback/Controls.js","components/Expresso-feedback/Notification.js","components/Expresso-feedback/Statistics.js","components/Expresso-feedback/FeedbackRender.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","containerHeading","heading","Controls","options","onLeaveFeedback","btnMap","Object","keys","map","item","name","type","onClick","btn","toUpperCase","slice","Math","random","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","Feedback","state","handleCLick","e","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","round","container","this","React","Component","App","defaultProps","initialValue","ReactDOM","render","document","querySelector"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,UAAY,4BAA4B,iBAAmB,mCAAmC,QAAU,0BAA0B,IAAM,sBAAsB,KAAO,uBAAuB,QAAU,0BAA0B,IAAM,sBAAsB,MAAQ,wBAAwB,mBAAqB,uC,kKCIpT,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,sBAAKC,UAAWC,IAAEC,iBAAlB,UACG,oBAAIF,UAAWC,IAAEE,QAAjB,SAA2BL,IAC3BC,KCJQ,SAASK,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACpCC,EAASC,OAAOC,KAAKJ,GAC3B,OACE,8BACGE,EAAOG,KAAI,SAACC,GAAD,OACV,wBAEEC,KAAMD,EACNE,KAAK,SACLC,QAASR,EACTN,UAAWC,IAAEc,IALf,SAOGJ,EAAK,GAAGK,cAAgBL,EAAKM,MAAM,IAN/BC,KAAKC,OAAO,SCRZ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,8BAAM,6BAAKA,MCCL,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,8BACGJ,GAAQC,GAAmB,IAARC,EAClB,+BACE,+BACE,sBAAMzB,UAAWC,IAAEsB,KAAnB,4CADF,KAC0CA,KAE1C,+BACE,sBAAMvB,UAAWC,IAAEuB,QAAnB,0EADF,KACkDA,KAElD,+BACE,sBAAMxB,UAAWC,IAAEwB,IAAnB,mDADF,KAC2CA,KAE3C,qBAAIzB,UAAWC,IAAEyB,MAAjB,iHAA6CA,EAA7C,OACA,qBAAI1B,UAAWC,IAAE0B,mBAAjB,0GACqBA,EADrB,IAC0C,UAI5C,cAACP,EAAD,CAAcC,QAAQ,2I,ICxBTO,E,4MAKnBC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,YAAc,SAACC,GAAO,IACZnB,EAASmB,EAAEC,cAAXpB,KACR,EAAKqB,UAAS,SAACC,GACb,OAAO,eACJtB,EAAOsB,EAAUtB,GAAQ,O,EAKhCuB,mBAAqB,WACnB,OAAO,EAAKN,MAAMN,KAAO,EAAKM,MAAMJ,IAAM,EAAKI,MAAML,S,EAEvDY,gCAAkC,WAChC,OAAOlB,KAAKmB,MAAyB,IAAlB,EAAKR,MAAMN,KAAc,EAAKY,uB,uDAIjD,OACE,sBAAKnC,UAAWC,IAAEqC,UAAlB,UACE,cAACzC,EAAD,CAASC,MAAM,yKAAf,SACE,cAACM,EAAD,CAAUC,QAASkC,KAAKV,MAAOvB,gBAAiBiC,KAAKT,gBAEvD,cAACjC,EAAD,CAASC,MAAM,+DAAf,SACE,cAACwB,EAAD,CACEC,KAAMgB,KAAKV,MAAMN,KACjBC,QAASe,KAAKV,MAAML,QACpBC,IAAKc,KAAKV,MAAMJ,IAChBC,MAAOa,KAAKJ,qBACZR,mBAAoBY,KAAKH,6C,GAvCCI,IAAMC,WCA7B,SAASC,IACtB,OAAU,cAAC,EAAD,IDDSd,EACZe,aAAe,CACpBC,aAAc,GEHlBC,IAASC,OAAO,cAACJ,EAAD,IAASK,SAASC,cAAc,Y","file":"static/js/main.3a067ad4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feedback_container__1cbKW\",\"containerHeading\":\"Feedback_containerHeading__3hMXs\",\"heading\":\"Feedback_heading__1gsnK\",\"btn\":\"Feedback_btn__2X1ru\",\"good\":\"Feedback_good__2_0c-\",\"neutral\":\"Feedback_neutral__3gzFF\",\"bad\":\"Feedback_bad__1o9hT\",\"total\":\"Feedback_total__3ZR2c\",\"positivePercentage\":\"Feedback_positivePercentage__1crvn\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./Feedback.module.css\";\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div className={s.containerHeading}>\r\n      {<h2 className={s.heading}>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./Feedback.module.css\";\r\n\r\nexport default function Controls({ options, onLeaveFeedback }) {\r\n  const btnMap = Object.keys(options);\r\n  return (\r\n    <div>\r\n      {btnMap.map((item) => (\r\n        <button\r\n          key={Math.random(3)}\r\n          name={item}\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback}\r\n          className={s.btn}\r\n        >\r\n          {item[0].toUpperCase() + item.slice(1)}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nControls.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <div>{<h2>{message}</h2>}</div>;\r\n}\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\n\r\nimport Notification from \"./Notification\";\r\nimport s from \"./Feedback.module.css\";\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div>\r\n      {good || neutral || bad !== 0 ? (\r\n        <ul>\r\n          <li>\r\n            <span className={s.good}>Добре</span>: {good}\r\n          </li>\r\n          <li>\r\n            <span className={s.neutral}>Нейтрально</span>: {neutral}\r\n          </li>\r\n          <li>\r\n            <span className={s.bad}> Погано</span>: {bad}\r\n          </li>\r\n          <li className={s.total}> Загально відгуків: {total} </li>\r\n          <li className={s.positivePercentage}>\r\n            Хороших відгуків: {positivePercentage}%{\" \"}\r\n          </li>\r\n        </ul>\r\n      ) : (\r\n        <Notification message=\"Наразі відгуки відсутні! :)\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Section from \"./Section\";\r\nimport Controls from \"./Controls\";\r\nimport Statistics from \"./Statistics\";\r\n\r\nimport s from \"./Feedback.module.css\";\r\n\r\nexport default class Feedback extends React.Component {\r\n  static defaultProps = {\r\n    initialValue: 0,\r\n  };\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleCLick = (e) => {\r\n    const { name } = e.currentTarget;\r\n    this.setState((prevState) => {\r\n      return {\r\n        [name]: prevState[name] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.bad + this.state.neutral;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.container}>\r\n        <Section title=\"Будь ласка залишіть свій відгук\">\r\n          <Controls options={this.state} onLeaveFeedback={this.handleCLick} />\r\n        </Section>\r\n        <Section title=\"Статистика\">\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\n// import ReactDOM from 'react-dom';\n\nimport Feedback from \"./components/Expresso-feedback/FeedbackRender\"\n\n\n\nexport default function App() { \n  return (  <Feedback />)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}